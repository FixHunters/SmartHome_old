/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.0).
 * https://github.com/swagger-api/swagger-codegen Do not edit the class manually.
 */
package com.smarthome.flat.svc.controller;

import com.smarthome.flat.svc.model.TppsListReply;

import io.swagger.annotations.*;
import javax.validation.Valid;
import javax.validation.constraints.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

@javax.annotation.Generated(
  value = "io.swagger.codegen.languages.SpringCodegen",
  date = "2018-04-03T15:24:02.669+02:00"
)
@Api(value = "tpps", description = "the tpps API")
public interface TppsApi {

  @ApiOperation(
    value = "",
    nickname = "getTPPRecords",
    notes = "Retrieve list of TPPs",
    response = TppsListReply.class,
    tags = {}
  )
  @ApiResponses(
    value = {
      @ApiResponse(
        code = 200,
        message = "The operation was successful",
        response = TppsListReply.class
      ),
      @ApiResponse(code = 400, message = "Wrong input data format", response = Error.class)
    }
  )
  @RequestMapping(
    value = "/tpps",
    produces = {"application/json"},
    method = RequestMethod.GET
  )
  ResponseEntity<TppsListReply> getTPPRecords(
      @ApiParam(value = "") @Valid @RequestParam(value = "tppName", required = false)
          String tppName,
      @ApiParam(value = "") @Valid @RequestParam(value = "country", required = false)
          String country,
      @ApiParam(value = "") @Valid @RequestParam(value = "isBlocked", required = false)
          Boolean isBlocked,
      @ApiParam(value = "") @Valid @RequestParam(value = "pageSize", required = false)
          String pageSize,
      @ApiParam(value = "") @Valid @RequestParam(value = "cursor", required = false) String cursor,
      @ApiParam(value = "") @Valid @RequestParam(value = "role", required = false) String role,
      @ApiParam(value = "") @Valid @RequestParam(value = "licenceId", required = false)
          String licenceId,
      @ApiParam(value = "") @Valid @RequestParam(value = "registrator", required = false)
          String registrator,
      @ApiParam(value = "") @Valid @RequestParam(value = "registratorCountry", required = false)
          String registratorCountry);

}
